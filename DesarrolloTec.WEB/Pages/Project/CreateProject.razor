@page "/projects/create"
@using DesarrolloTec.Shared.Entities

@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@inject SweetAlertService swal

<h3>Projecto Create</h3>

<ProjectForm @ref="projectForm" Project="Project" OnSubmit="Create" ReturnAction="Return" />

@code {
    private Project Project = new();
    private ProjectForm projectForm;

    private async Task Create()
    {
        var responseHttp = await repository.PostAsync("/api/projects", Project);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await swal.FireAsync("Error", message, SweetAlertIcon.Error);
        }
        else {

            projectForm!.FormPostedSuccessfully = true;
            await swal.FireAsync("Éxito", "El cliente se ha creado correctamente.");
            navigationManager.NavigateTo("/projects");
        }

    }

    private void Return()
    {
        navigationManager.NavigateTo("/projects");
    }
}

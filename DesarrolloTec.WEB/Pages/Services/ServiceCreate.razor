@page "/services/create"
@using DesarrolloTec.Shared.Entities
@using CurrieTechnologies.Razor.SweetAlert2


@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService swal


<h3>Crear Servicio</h3>

<ServiceForm @ref="serviceForm" Service="Service" OnSubmit="Create" ReturnAction="Return" />

@code {
    private Service Service = new();
    private ServiceForm serviceForm;
 

    private async Task Create()
    {


        var responseHttp = await repository.PostAsync("/api/services", Service);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await swal.FireAsync("Error", message, SweetAlertIcon.Error);
          
        }
        else
        {
            serviceForm!.FormPostedSuccessfully = true;
            await swal.FireAsync("Éxito", "El servicio se ha creado correctamente.");
            navigationManager.NavigateTo("/services");
        }
    }

    private void Return()
    {
        navigationManager.NavigateTo("/services");
    }
}
